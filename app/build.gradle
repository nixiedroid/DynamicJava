import java.text.SimpleDateFormat

plugins {
    id 'application'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

shadowJar{
    archiveClassifier.set('fat')
    minimize {
        exclude(dependency(':premain'))
    }
}

java {
    group = 'com.nixiedroid'
    version = '1'
    base.archivesName = 'app'
    sourceCompatibility = "17"
    targetCompatibility = "17"
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

def preMainDir = DEFAULT_BUILD_DIR_NAME + "/libs/" + project.name + "-"+ project.version + "-" + shadowJar.archiveClassifier.get() + ".jar"
def preMainClass = "com.nixiedroid.premain.Premain"

application  {
    mainClass = "com.nixiedroid.Main"
    applicationDefaultJvmArgs = ["-javaagent:" + preMainDir, "-server","-XX:-UseCompressedOops"]
}

compileJava {
    options.compilerArgs << "-Xlint:deprecation" << "-Xlint:unchecked"
}


//https://docs.gradle.org/4.9/userguide/working_with_files.html#sec:reproducible_archives
//Make gradle builds deterministic
tasks.withType(AbstractArchiveTask).configureEach {
    preserveFileTimestamps = false
    reproducibleFileOrder = true
}

jar {
    manifest {
        attributes(
                "Implementation-Title": project.name,
                "Implementation-Version": project.version,
                "Created-By"            : "Gradle ${gradle.gradleVersion}",
                "Build-Timestamp"       : new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ").format(new Date()),
                "Build-Jdk"             : "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})",
                "Build-OS"              : "${System.properties['os.name']} ${System.properties['os.arch']} ${System.properties['os.version']}",
                //"Launcher-Agent-Class" : preMainClass,
                "Main-Class": application.mainClass,
                "Premain-class" : preMainClass
                //'Add-Opens': 'java.prefs/java.util.prefs'
        )
    }
}
tasks.register("sign"){
    def jarSigner = project.property("jarSigner")
    def pkAlias =  project.property("kkAlias")
    def keystoreFileName = project.property("kstFile")
    def storePassword = project.property("kstPass")
    def keyPassword = project.property("kkPass")
    def keystoreType = project.property("kstType")
    def libsFilePath =DEFAULT_BUILD_DIR_NAME + "/libs"
    def libFiles = files { file(libsFilePath).listFiles() }
    def destDir = DEFAULT_BUILD_DIR_NAME + "/libs"
    def signedDir = new File(destDir)

    signedDir.mkdirs()
    libFiles.each {
        ant.signjar(
                jar: it,
                destDir: "$destDir",
                alias:"$pkAlias",
                storetype:"$keystoreType",
                keystore:"$keystoreFileName",
                storepass:"$storePassword",
                keypass:"$keyPassword",
                preservelastmodified:"true"
        )
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation project(":premain")
    implementation project(':core')
    implementation 'org.jetbrains:annotations:24.0.0'
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
 //   implementation 'org.apache.bcel:bcel:6.8.2'
}

test {
    useJUnitPlatform()
}
